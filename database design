Conceptual Design

- create a conceptual shema for the database, using a high level conceptual data model. This phase is called conceptual design.
- The result of this phase is an Entity-Relationship (ER) diagram.
- It is a high-level data model of the specific application area. 
- It describes how different entities (objects, items) are related to each other. 
- define attributes (features) each entity has. 
- It includes the definitions of all the concepts (entities, attributes) of the application area.

During or after the conceptual shema design, the basic data model operations can be used to specify the high-level user operations 
identified during the functional analysis. 
This also serves to confirm that the conceptual schema meets all the indenfied functional requirements.

There are several notations to draw the ER diagram.


Logical Design

- define a set of relation shcemas. The ER diagram or class diagram is the basis for these relation schemas.
- definethe primary keys and foreign keys
- Normalization

Physical Design

- to implement the database. At this phase one must know which database management system (DBMS) is used. 
For example, different DBMS's have different names for datatypes and have different datatypes.
- SQL are written. The idexes, the integrity constraints (rules) and the users' access rights are defined.
- Finally the data to test the database is added in.


Types of Attribute

simple vs composite
single-valued vs. multi-valued
Derived attribute --e.g. age

Normalizaion

suppose you have a claim transaction table. you have 3 busness key, combine them you can uniquely determine each transaction.
say one of the key attribute is claimnumber, it can uniquely determine policy number, which is another attribute.
The key attribute -which combines 3 busness key - will not fully funtional determine policy number. in this case, it is not in 2nf
to make it 2nf, create a seperate table for claimnumber and policy and reletied infomations
